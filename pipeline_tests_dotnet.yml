# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
name: dotnet_$(Build.BuildId)_$(Date:yyyy-MM-dd)_$(Hours)-$(Minutes)_$(Rev:rr)_$(Build.DefinitionName)

parameters:
  - name: repositoryname
    type: string
    default: pipeline_tests/DotnetTemplateTester

### SAST
  - name: runsonarqube
    type: boolean
    default: false
  - name: runblackduck
    type: boolean
    default: false
  - name: runcredscan
    type: boolean
    default: false
  - name: doblackduckrapidscan
    type: boolean
    default: false

### Deployment Options
  - name: RunDeployment
    displayName: Run Deployment
    type: boolean 
    default: true

### Build Options
  - name: buildPlatform # Specify the platform you want to build such as Win32, x86, x64 or any cpu.
    type: string
    default: 'Any CPU'
  - name: buildConfiguration # Specify the configuration you want to build such as debug or release.
    type: string
    values:
      - Debug
      - Release
    default: 'Release'
  - name: sdkVersion
    type: string
    default: '6.x' 

trigger: none

resources:
  repositories:
    - repository: CICDTemplate
      type: githubenterprise
      name: IT4SC-DevOps/CICDTemplate
      endpoint: MO360ComputePlatformGitHubConnection
      #ref: refs/tags/v5.0.5
      ref: feature/nuget_auth
extends:
  template: CI_pipeline_template.yml@CICDtemplate
  parameters:
    buildtype: 'dotnet'
    #checkoutrepo:
     # checkout: self
      #path: ${{ parameters.repositoryname }}
      #lfs: false
    #rootpath: pipeline_tests/DotnetTemplateTester
    productname: 'dotnet_test_product'
    #Build Options
    buildPlatform: ${{parameters.buildPlatform}}
    buildConfiguration: ${{parameters.buildConfiguration}}
    sdkVersion: ${{parameters.sdkVersion}}
    #SAST
    sonarqubeprojectkey: $(System.TeamProjectId)_IT4SC-DevOps-Dotnet-Template-Tester
    runcredscan: ${{ parameters.runcredscan }}
    runsonarqube: ${{ parameters.runsonarqube }}
    runblackduck: ${{ parameters.runblackduck }}
    blackduckprojectname: MO360-CP-DEMO
    failbdscan: false
    doblackduckrapidscan: false
    NugetServiceConnection: 'MO360ComputePlatformArtifactoryConnectionNUGET'
    nugetConfigPath: 'NuGet.config'
    runsechub: false
    sechubprojectname: 'mo360cp-mocked'
    sechubpid: 'PID4F80'
    sechub_endpoint: 'https://sechub-playground.app.corpintra.net'
    stop_on_yellow: true
    sechub_apitoken: $(sechub_sandbox_apikey_mo360cp)
    #Publish
    publishdirectory: $(Pipeline.Workspace)\build
    #Deployment Options
    RunDeployment: ${{ parameters.RunDeployment }}


